# Generated by Django 4.1.2 on 2023-09-13 16:12

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("commitment", "0048_alter_usercommitmentsfornextweekmodel_end_date"),
        ("user", "0004_alter_usermodel_api_key"),
        ("subscription", "0002_remove_subscriptionmodel_designation_id"),
        ("group_challenges", "0017_alter_groupchallengesmodel_challenge_date"),
    ]

    operations = [
        migrations.CreateModel(
            name="BiddingGroupChallengesModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "challenge_name",
                    models.CharField(db_index=True, max_length=80, unique=True),
                ),
                (
                    "challenge_video_url",
                    models.CharField(blank=True, db_index=True, max_length=80),
                ),
                (
                    "challenge_title",
                    models.CharField(db_index=True, default="", max_length=80),
                ),
                ("challenge_image", models.FileField(blank=True, upload_to="")),
                ("time_in_seconds", models.IntegerField(default=0)),
                ("is_limited_time_challenge", models.BooleanField(default=False)),
                ("challenge_date", models.DateField(blank=True, null=True)),
                (
                    "max_participants_allowed",
                    models.IntegerField(blank=True, default=0, max_length=10),
                ),
                (
                    "price_to_pay",
                    models.CharField(blank=True, default="", max_length=10),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "suggested_workout",
                    models.ManyToManyField(
                        blank=True, to="commitment.commitmentnamemodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GroupChallengesForFreeTrialModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "challenge_name",
                    models.CharField(db_index=True, max_length=80, unique=True),
                ),
                (
                    "challenge_video_url",
                    models.CharField(blank=True, db_index=True, max_length=80),
                ),
                (
                    "challenge_title",
                    models.CharField(db_index=True, default="", max_length=80),
                ),
                ("challenge_image", models.FileField(blank=True, upload_to="")),
                ("time_in_seconds", models.IntegerField(default=0)),
                ("is_limited_time_challenge", models.BooleanField(default=False)),
                ("challenge_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "suggested_workout",
                    models.ManyToManyField(
                        blank=True, to="commitment.commitmentnamemodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GroupChallengesForSubscribedUsersModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "challenge_name",
                    models.CharField(db_index=True, max_length=80, unique=True),
                ),
                (
                    "challenge_video_url",
                    models.CharField(blank=True, db_index=True, max_length=80),
                ),
                (
                    "challenge_title",
                    models.CharField(db_index=True, default="", max_length=80),
                ),
                ("challenge_image", models.FileField(blank=True, upload_to="")),
                ("time_in_seconds", models.IntegerField(default=0)),
                ("is_limited_time_challenge", models.BooleanField(default=False)),
                ("challenge_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "subscription",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="subscription.subscriptionmodel",
                    ),
                ),
                (
                    "suggested_workout",
                    models.ManyToManyField(
                        blank=True, to="commitment.commitmentnamemodel"
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="guidelinesofgroupchallengemodel",
            name="group_challenge",
        ),
        migrations.AddField(
            model_name="guidelinesofgroupchallengemodel",
            name="challenge_id",
            field=models.IntegerField(default=0),
        ),
        migrations.RenameModel(
            old_name="ParticipantsInGroupChallengeModel",
            new_name="ParticipantsInBiddingGroupChallengesModel",
        ),
        migrations.CreateModel(
            name="PublicCustomGroupChallengesTitleModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "challenge_video_url",
                    models.CharField(blank=True, db_index=True, max_length=80),
                ),
                (
                    "challenge_title",
                    models.CharField(db_index=True, default="", max_length=80),
                ),
                ("challenge_image", models.FileField(blank=True, upload_to="")),
                ("is_limited_time_challenge", models.BooleanField(default=False)),
                ("time_in_seconds", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "suggested_workout",
                    models.ManyToManyField(
                        blank=True, to="commitment.commitmentnamemodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PublicCustomGroupChallengesModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("challenge_date", models.DateField(blank=True, null=True)),
                (
                    "max_participants_allowed",
                    models.IntegerField(blank=True, default=0, max_length=10),
                ),
                (
                    "price_to_pay",
                    models.CharField(blank=True, default="", max_length=10),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "challenge_details",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="group_challenges.publiccustomgroupchallengestitlemodel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.usermodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ParticipantsInPublicCustomGroupChallengesModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("challenge_video", models.FileField(blank=True, upload_to="")),
                ("has_submitted_video", models.BooleanField(default=False)),
                ("hide_from_user", models.BooleanField(default=False)),
                ("date_of_submission", models.DateTimeField(blank=True, null=True)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "group_challenge",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="group_challenges.biddinggroupchallengesmodel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.usermodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ParticipantsInGroupChallengesForSubscribedUsersModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("challenge_video", models.FileField(blank=True, upload_to="")),
                ("has_submitted_video", models.BooleanField(default=False)),
                ("hide_from_user", models.BooleanField(default=False)),
                ("date_of_submission", models.DateTimeField(blank=True, null=True)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "group_challenge",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="group_challenges.groupchallengesforsubscribedusersmodel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.usermodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ParticipantsInGroupChallengesForFreeTrialModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("challenge_video", models.FileField(blank=True, upload_to="")),
                ("has_submitted_video", models.BooleanField(default=False)),
                ("hide_from_user", models.BooleanField(default=False)),
                ("date_of_submission", models.DateTimeField(blank=True, null=True)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "group_challenge",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="group_challenges.groupchallengesforfreetrialmodel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.usermodel",
                    ),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="biddingchallengepaymentdetailsmodel",
            name="group_challenge",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="group_challenges.biddinggroupchallengesmodel",
            ),
        ),
        migrations.AlterField(
            model_name="participantsinbiddinggroupchallengesmodel",
            name="group_challenge",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="group_challenges.biddinggroupchallengesmodel",
            ),
        ),
        migrations.DeleteModel(
            name="GroupChallengesModel",
        ),
    ]
