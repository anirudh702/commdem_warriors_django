# Generated by Django 4.1.2 on 2023-07-29 06:19

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("commitment", "0005_alter_usercommitmentsfornextweekmodel_end_date"),
        ("designation", "0001_initial"),
        ("user", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="GroupChallengesModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "challenge_name",
                    models.CharField(db_index=True, max_length=80, unique=True),
                ),
                (
                    "challenge_video_url",
                    models.CharField(db_index=True, max_length=80, unique=True),
                ),
                (
                    "challenge_title",
                    models.CharField(db_index=True, default="", max_length=80),
                ),
                ("challenge_image", models.FileField(blank=True, upload_to="")),
                ("min_age", models.IntegerField(blank=True, default=0)),
                ("max_age", models.IntegerField(blank=True, default=0)),
                ("time_in_seconds", models.IntegerField(default=0)),
                ("min_rating", models.IntegerField(blank=True, default=0)),
                ("max_rating", models.IntegerField(blank=True, default=0)),
                ("gender", models.CharField(default="male", max_length=10)),
                ("start_date", models.DateField(blank=True)),
                ("end_date", models.DateField(blank=True)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "designation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="designation.designationmodel",
                    ),
                ),
                (
                    "suggested_workout",
                    models.ManyToManyField(to="commitment.commitmentnamemodel"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RulesOfGroupChallengeModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(db_index=True, default="", max_length=100)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WorkoutSuggestionsForGroupChallengeModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "workout_name",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="commitment.commitmentnamemodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ParticipantsInGroupChallengeModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("challenge_video", models.FileField(blank=True, upload_to="")),
                ("has_submitted_video", models.BooleanField(default=False)),
                ("hide_from_user", models.BooleanField(default=False)),
                ("date_of_submission", models.DateTimeField(blank=True, null=True)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "group_challenge",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="group_challenges.groupchallengesmodel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.usermodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GuidelinesOfGroupChallengeModel",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(db_index=True, default="", max_length=100)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "group_challenge",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="group_challenges.groupchallengesmodel",
                    ),
                ),
            ],
        ),
    ]
